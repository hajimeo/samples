#################
# glauth.conf
# Download: https://github.com/glauth/glauth/releases/download/v2.1.0/linuxamd64.zip

#################
# General configuration.
debug = true
# syslog = true
#
# Enable hot-reload of configuration on changes
# - does NOT work [ldap], [ldaps], [backend] or [api] sections
# watchconfig = true

#################
# yubikeyclientid = "yubi-api-clientid"
# yubikeysecret = "yubi-api-secret"

#################
# Server configuration.
[ldap]
enabled = true
# run on a non privileged port
listen = "0.0.0.0:389"

[ldaps]
# to enable ldaps generate a certificate, eg. with:
# openssl req -x509 -newkey rsa:4096 -keyout glauth.key -out glauth.crt -days 365 -nodes -subj '/CN=`hostname`'
enabled = false
listen = "0.0.0.0:636"
cert = "glauth.crt"
key = "glauth.key"

#################
# The backend section controls the data store.
[backend]
datastore = "config"
baseDN = "dc=standalone,dc=localdomain"
#nameformat = "cn"
#groupformat = "ou"

## Configure dn format to use structures like
## "uid=serviceuser,cn=svcaccts,$BASEDN" instead of "cn=serviceuser,ou=svcaccts,$BASEDN"
## to help ease migrations from other LDAP systems
nameformat = "uid"
groupformat = "cn"

## Configure ssh-key attribute name, default is 'sshPublicKey'
# sshkeyattr = "ipaSshPubKey"

[behaviors]
# Ignore all capabilities restrictions, for instance allowing every user to perform a search
IgnoreCapabilities = false
# Enable a "fail2ban" type backoff mechanism temporarily banning repeated failed login attempts
LimitFailedBinds = true
# How many failed login attempts are allowed before a ban is imposed
NumberOfFailedBinds = 3
# How long (in seconds) is the window for failed login attempts
PeriodOfFailedBinds = 10
# How long (in seconds) is the ban duration
BlockFailedBindsFor = 60
# Clean learnt IP addresses every N seconds
PruneSourceTableEvery = 600
# Clean learnt IP addresses not seen in N seconds
PruneSourcesOlderThan = 600

#################
# The users section contains a hardcoded list of valid users.
#   to create a passSHA256:   echo -n "mysecret" | openssl dgst -sha256
[[users]]
name = "admin"
givenname="admin"
sn="superuser"
mail = "admin@standalone.localdomain"
uidnumber = 5001
primarygroup = 5501
passsha256 = "3de9273e88d1153033fccc7574cc168a51022a55738bff6727ae581e8c19380f"
[[users.capabilities]]
action = "search"
object = "*"

[[users]]
name = "ldapuser"
givenname="ldap"
sn="user"
mail = "ldapuser@standalone.localdomain"
uidnumber = 5002
primarygroup = 5502
passsha256 = "f8a94cd57abda9f0d388a3b279fb3afea239b435b6235ba7b5f195bf2eada67b"


#################
# The groups section contains a hardcoded list of valid users.
[[groups]]
name = "admins"
gidnumber = 5501

[[groups]]
name = "ipausers"
gidnumber = 5502
includegroups = [ 5501 ]


#################
# Enable and configure the optional REST API here.
[api]
enabled = true
internals = true # debug application performance
tls = false # enable TLS for production!!
listen = "0.0.0.0:5555"
cert = "cert.pem"
key = "key.pem"
