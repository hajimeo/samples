FROM centos:7.4.1708

#install HDP requirements + dependencies and system tools 
RUN sed -i 's/override_install_langs.*/override_install_langs=en_US.utf8/' /etc/yum.conf;yum -y install yum-plugin-ovl scp curl unzip tar wget openssl python nscd;\
yum -y install bzip2 bzip2-libs rsync;\
yum -y install yum-utils sudo which vim net-tools telnet bind-utils strace lsof tcpdump openssh-server openssh-clients openldap-clients fuse sshfs nc patch mysql-connector-java acl alsa-lib at atk avahi-libs bc cairo cdparanoia-libs cronie cronie-anacron crontabs cups cups-libs cvs cyrus-sasl db4 db4-cxx db4-devel db4-utils dbus ed fontconfig foomatic foomatic-db foomatic-db-filesystem foomatic-db-ppds freetype gdbm gdbm-devel gdk-pixbuf2 gettext ghostscript ghostscript-fonts glibc glibc-common glibc-devel glibc-headers gnutls gstreamer gstreamer-plugins-base gstreamer-tools gtk2 hesiod hicolor-icon-theme iso-codes jasper-libs kernel-headers lcms-libs libICE libSM libX11 libX11-common libXau libXcomposite libXcursor libXdamage libXext libXfixes libXfont libXft libXi libXinerama libXrandr libXrender libXt libXtst libXv libXxf86vm libcap-ng libfontenc libgomp libgudev1 libjpeg-turbo libmng libogg liboil libpng libthai libtheora libtiff libudev libvisual libvorbis libxcb logrotate m4 mailx man mesa-dri-drivers mesa-dri-filesystem mesa-dri1-drivers mesa-libGL mesa-libGLU mesa-private-llvm nc openjpeg-libs pango passwd patch pax perl-CGI perl-ExtUtils-MakeMaker perl-ExtUtils-ParseXS perl-Test-Harness perl-Test-Simple perl-devel phonon-backend-gstreamer pixman poppler poppler-data poppler-utils portreserve procmail qt qt-sqlite qt-x11 qt3 redhat-lsb redhat-lsb-compat redhat-lsb-core redhat-lsb-graphics redhat-lsb-printing rsyslog sendmail time tmpwatch tzdata urw-fonts xml-common xorg-x11-font-utils xz xz-lzma-compat krb5-workstation epel-release;\
yum -y localinstall http://repo.mysql.com/mysql-community-release-el7.rpm

#disable iptables and SeLinux, setup ssh
RUN setenforce 0 || echo ko;\
systemctl disable firewalld.service || echo ko;\
mkdir -m 600 /root/.ssh;\
echo -e '_REPLACE_WITH_YOUR_PRIVATE_KEY_' > /root/.ssh/id_rsa;\
chmod 400 /root/.ssh/id_rsa;\
ssh-keygen -y -f /root/.ssh/id_rsa > /root/.ssh/id_rsa.pub;\
cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys;\
chmod 600 /root/.ssh/authorized_keys;\
chown -R root:root /root/.ssh;\
( grep ^PermitRootLogin /etc/ssh/sshd_config && sed -i 's/^PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config ) || echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config;\
( grep ^GSSAPIAuthentication /etc/ssh/sshd_config && sed -i 's/^GSSAPIAuthentication yes/GSSAPIAuthentication no/' /etc/ssh/sshd_config ) || echo 'GSSAPIAuthentication no' >> /etc/ssh/sshd_config;\
( grep ^UseDNS /etc/ssh/sshd_config && sed -i 's/^UseDNS yes/UseDNS no/' /etc/ssh/sshd_config ) || echo 'UseDNS no' >> /etc/ssh/sshd_config;\
umask 022

# Centos 7 customizations, by default leave only sshd enabled
ENV container docker
RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \
systemd-tmpfiles-setup.service ] || rm -f $i; done); \
rm -f /lib/systemd/system/multi-user.target.wants/*;\
rm -f /etc/systemd/system/*.wants/*;\
rm -f /lib/systemd/system/local-fs.target.wants/*; \
rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
rm -f /lib/systemd/system/basic.target.wants/*;\
rm -f /lib/systemd/system/anaconda.target.wants/*;\
systemctl enable sshd;

VOLUME [ "/sys/fs/cgroup" ]
CMD ["/usr/sbin/init"]
