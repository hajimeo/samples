#!/usr/bin/env bash
### Global variable ###################
g_AMBARI_USER='admin'
g_AMBARI_PASS='admin'



function setup_nn_ha() {
    local _ambari_cluster_api_url="${1}"    # eg: http://ho-ubu01:8080/api/v1/clusters/houbu01_1
    local _first_nn="${2-$_FIRST_NN}"
    local _second_nn="${3-$_NEW_NN}"        # TODO: currently new NN must be Secondary NameNode
    local _journal_nodes="${4}"             # eg: "node2.houbu01.localdomain,node3.houbu01.localdomain,node4.houbu01.localdomain"
    local _cluster="`basename "${_ambari_cluster_api_url%/}"`"

    # Safemode and checkpointing
    ssh -qt root@${_first_nn} "su hdfs -l -c \"kinit -kt /etc/security/keytabs/hdfs.headless.keytab hdfs-${_cluster,,}\"" &>/dev/null
    ssh -qt root@${_first_nn} "su hdfs -l -c 'hdfs dfsadmin -safemode enter && hdfs dfsadmin -saveNamespace'" || return $?

    # Stop all
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/services?" -X PUT --data '{"RequestInfo":{"context":"Stop all services","operation_level":{"level":"CLUSTER","cluster_name":"houbu01_1"}},"Body":{"ServiceInfo":{"state":"INSTALLED"}}}' | grep -q '^HTTP/1.1 2' || return $?
    # Wait until stop. TODO: Assuming ZOOKEEPER will be the last
    _ambari_waist_comp_state "${_ambari_cluster_api_url}" "ZOOKEEPER" "ZOOKEEPER_SERVER" "INSTALLED"

    # Assign a namenode to a host
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/hosts" --data '{"RequestInfo":{"query":"Hosts/host_name='${_second_nn}'"},"Body":{"host_components":[{"HostRoles":{"component_name":"NAMENODE"}}]}}' | grep -q '^HTTP/1.1 2' || return $?
    # Install new namenode
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/host_components?" -X PUT --data '{"RequestInfo":{"context":"Install NameNode","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"},"query":"HostRoles/component_name=NAMENODE&HostRoles/host_name.in('${_second_nn}')&HostRoles/maintenance_state=OFF"},"Body":{"HostRoles":{"state":"INSTALLED"}}}' | grep -q '^HTTP/1.1 2' || return $?
    # Add a JournalNode
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/services?ServiceInfo/service_name=HDFS" --data '{"components":[{"ServiceComponentInfo":{"component_name":"JOURNALNODE"}}]}' | grep -q '^HTTP/1.1 2' || return $?
    # Assign JournalNodes to hosts
    [ -z "$_journal_nodes" ] && return 1
    for _jn in `echo "$_journal_nodes" | sed 's/,/\n/g'`; do
        curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/hosts" --data '{"RequestInfo":{"query":"Hosts/host_name='${_jn}'"},"Body":{"host_components":[{"HostRoles":{"component_name":"JOURNALNODE"}}]}}' | grep -q '^HTTP/1.1 2' || return $?
    done
    # Install JournalNodes
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/host_components?" -X PUT --data '{"RequestInfo":{"context":"Install JournalNode","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"},"query":"HostRoles/component_name=JOURNALNODE&HostRoles/host_name.in('${_journal_nodes}')&HostRoles/maintenance_state=OFF"},"Body":{"HostRoles":{"state":"INSTALLED"}}}'

    # TODO: update config
    #curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}" -X PUT --data '{"Clusters":{"desired_config":[{"type":"hdfs-site","tag":"version1522236112912","properties":{"dfs.block.access.token.enable":"true","dfs.blockreport.initialDelay":"120","dfs.blocksize":"134217728","dfs.client.read.shortcircuit":"true","dfs.client.read.shortcircuit.streams.cache.size":"4096","dfs.client.retry.policy.enabled":"false","dfs.cluster.administrators":" hdfs","dfs.content-summary.limit":"5000","dfs.datanode.address":"0.0.0.0:50010","dfs.datanode.balance.bandwidthPerSec":"6250000","dfs.datanode.data.dir":"/hadoop/hdfs/data","dfs.datanode.data.dir.perm":"750","dfs.datanode.du.reserved":"536870912","dfs.datanode.failed.volumes.tolerated":"0","dfs.datanode.http.address":"0.0.0.0:50075","dfs.datanode.https.address":"0.0.0.0:50475","dfs.datanode.ipc.address":"0.0.0.0:8010","dfs.datanode.max.transfer.threads":"16384","dfs.domain.socket.path":"/var/lib/hadoop-hdfs/dn_socket","dfs.encrypt.data.transfer.cipher.suites":"AES/CTR/NoPadding","dfs.encryption.key.provider.uri":"kms://http@'${_second_nn}':9292/kms","dfs.heartbeat.interval":"3","dfs.hosts.exclude":"/etc/hadoop/conf/dfs.exclude","dfs.http.policy":"HTTP_ONLY","dfs.https.port":"50470","dfs.journalnode.edits.dir":"/hadoop/hdfs/journal","dfs.journalnode.http-address":"0.0.0.0:8480","dfs.journalnode.https-address":"0.0.0.0:8481","dfs.namenode.accesstime.precision":"0","dfs.namenode.audit.log.async":"true","dfs.namenode.avoid.read.stale.datanode":"true","dfs.namenode.avoid.write.stale.datanode":"true","dfs.namenode.checkpoint.dir":"/hadoop/hdfs/namesecondary","dfs.namenode.checkpoint.edits.dir":"${dfs.namenode.checkpoint.dir}","dfs.namenode.checkpoint.period":"21600","dfs.namenode.checkpoint.txns":"1000000","dfs.namenode.fslock.fair":"false","dfs.namenode.handler.count":"200","dfs.namenode.name.dir":"/hadoop/hdfs/namenode","dfs.namenode.name.dir.restore":"true","dfs.namenode.safemode.threshold-pct":"0.99f","dfs.namenode.stale.datanode.interval":"30000","dfs.namenode.startup.delay.block.deletion.sec":"3600","dfs.namenode.write.stale.datanode.ratio":"1.0f","dfs.permissions.enabled":"true","dfs.permissions.superusergroup":"hdfs","dfs.replication":"1","dfs.replication.max":"50","dfs.support.append":"true","dfs.webhdfs.enabled":"true","fs.permissions.umask-mode":"022","hadoop.caller.context.enabled":"true","manage.include.files":"false","nfs.exports.allowed.hosts":"* rw","nfs.file.dump.dir":"/tmp/.hdfs-nfs","dfs.nameservices":"ubu01nnha","dfs.internal.nameservices":"ubu01nnha","dfs.ha.namenodes.ubu01nnha":"nn1,nn2","dfs.namenode.rpc-address.ubu01nnha.nn1":"'${_first_nn}':8020","dfs.namenode.rpc-address.ubu01nnha.nn2":"'${_second_nn}':8020","dfs.namenode.http-address.ubu01nnha.nn1":"'${_first_nn}':50070","dfs.namenode.http-address.ubu01nnha.nn2":"'${_second_nn}':50070","dfs.namenode.https-address.ubu01nnha.nn1":"'${_first_nn}':50470","dfs.namenode.https-address.ubu01nnha.nn2":"'${_second_nn}':50470","dfs.client.failover.proxy.provider.ubu01nnha":"org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider","dfs.namenode.shared.edits.dir":"qjournal://'${_first_nn}':8485;'${_second_nn}':8485;node4.houbu01.localdomain:8485/ubu01nnha","dfs.ha.fencing.methods":"shell(/bin/true)","dfs.ha.automatic-failover.enabled":true},"service_config_version_note":"This configuration is created by Enable NameNode HA wizard","properties_attributes":{"final":{"dfs.webhdfs.enabled":"true","dfs.namenode.http-address":"true","dfs.support.append":"true","dfs.namenode.name.dir":"true","dfs.datanode.failed.volumes.tolerated":"true","dfs.datanode.data.dir":"true"}}},{"type":"core-site","tag":"version1522236112912","properties":{"fs.defaultFS":"hdfs://ubu01nnha","fs.trash.interval":"360","ha.failover-controller.active-standby-elector.zk.op.retries":"120","hadoop.custom-extensions.root":"/hdp/ext/{{major_stack_version}}/hadoop","hadoop.http.authentication.simple.anonymous.allowed":"true","hadoop.proxyuser.hbase.groups":"*","hadoop.proxyuser.hbase.hosts":"*","hadoop.proxyuser.hcat.groups":"*","hadoop.proxyuser.hcat.hosts":"'${_first_nn}'","hadoop.proxyuser.hdfs.groups":"*","hadoop.proxyuser.hdfs.hosts":"*","hadoop.proxyuser.hive.groups":"*","hadoop.proxyuser.hive.hosts":"'${_first_nn}'","hadoop.proxyuser.root.groups":"*","hadoop.proxyuser.root.hosts":"node1.houbu01.localdomain","hadoop.security.auth_to_local":"DEFAULT","hadoop.security.authentication":"simple","hadoop.security.authorization":"false","hadoop.security.key.provider.path":"kms://http@'${_second_nn}':9292/kms","io.compression.codecs":"org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec","io.file.buffer.size":"131072","io.serializations":"org.apache.hadoop.io.serializer.WritableSerialization","ipc.client.connect.max.retries":"50","ipc.client.connection.maxidletime":"30000","ipc.client.idlethreshold":"8000","ipc.server.tcpnodelay":"true","mapreduce.jobtracker.webinterface.trusted":"false","net.topology.script.file.name":"/etc/hadoop/conf/topology_script.py","ha.zookeeper.quorum":"'${_first_nn}':2181"},"service_config_version_note":"This configuration is created by Enable NameNode HA wizard","properties_attributes":{"final":{"fs.defaultFS":"true"}}},{"type":"ranger-hdfs-audit","tag":"version1522236112912","properties":{"ranger.plugin.hdfs.ambari.cluster.name":"{{cluster_name}}","xasecure.audit.destination.hdfs":"false","xasecure.audit.destination.hdfs.batch.filespool.dir":"/var/log/hadoop/hdfs/audit/hdfs/spool","xasecure.audit.destination.hdfs.dir":"hdfs://ubu01nnha/ranger/audit","xasecure.audit.destination.solr":"false","xasecure.audit.destination.solr.batch.filespool.dir":"/var/log/hadoop/hdfs/audit/solr/spool","xasecure.audit.destination.solr.urls":"","xasecure.audit.destination.solr.zookeepers":"NONE","xasecure.audit.is.enabled":"true","xasecure.audit.provider.summary.enabled":"false"},"service_config_version_note":"This configuration is created by Enable NameNode HA wizard"}]}}' | grep -q '^HTTP/1.1 2' || return $?

    # Install HDFS client
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/host_components?" -X PUT --data '{"RequestInfo":{"context":"Install HDFS Client","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"},"query":"HostRoles/component_name=HDFS_CLIENT&HostRoles/host_name.in('${_journal_nodes}')&HostRoles/maintenance_state=OFF"},"Body":{"HostRoles":{"state":"INSTALLED"}}}' | grep -q '^HTTP/1.1 2' || return $?
    # Start Journal nodes
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/host_components?" -X PUT --data '{"RequestInfo":{"context":"Start JournalNode","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"},"query":"HostRoles/component_name=JOURNALNODE&HostRoles/host_name.in('${_journal_nodes}')&HostRoles/maintenance_state=OFF"},"Body":{"HostRoles":{"state":"STARTED"}}}' | grep -q '^HTTP/1.1 2' || return $?
    # Maintenance mode on SECONDARY NameNode (if fails, keep going)
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/hosts/'${_second_nn}'/host_components/SECONDARY_NAMENODE" -X PUT --data '{"RequestInfo":{},"Body":{"HostRoles":{"maintenance_state":"ON"}}}'

    # Wait Journal Nodes starts
    _ambari_waist_comp_state "${_ambari_cluster_api_url}" "HDFS" "JOURNALNODE" "STARTED"
    # Initialize JournalNodes
    ssh -qt root@${_first_nn} "su hdfs -l -c 'hdfs namenode -initializeSharedEdits'" || return $?
    
    # Start required services, starting all components including clients...
    #curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/host_components?" -X PUT --data '{"RequestInfo":{"context":"Start ZooKeeper Server","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"},"query":"HostRoles/component_name=ZOOKEEPER_SERVER&HostRoles/host_name.in('${_first_nn}')&HostRoles/maintenance_state=OFF"},"Body":{"HostRoles":{"state":"STARTED"}}}'
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/services?ServiceInfo/service_name.in(ZOOKEEPER)" -X PUT --data '{"RequestInfo":{"context":"Start required services ZOOKEEPER","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"}},"Body":{"ServiceInfo":{"state":"STARTED"}}}' | grep -q '^HTTP/1.1 2' || return $?
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/services?ServiceInfo/service_name.in(AMBARI_INFRA)" -X PUT --data '{"RequestInfo":{"context":"Start required services AMBARI_INFRA","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"}},"Body":{"ServiceInfo":{"state":"STARTED"}}}'

    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/host_components?" -X PUT --data '{"RequestInfo":{"context":"Start NameNode","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"},"query":"HostRoles/component_name=NAMENODE&HostRoles/host_name.in('${_first_nn}')&HostRoles/maintenance_state=OFF"},"Body":{"HostRoles":{"state":"STARTED"}}}' | grep -q '^HTTP/1.1 2' || return $?

    _ambari_waist_comp_state "${_ambari_cluster_api_url}" "HDFS" "NAMENODE" "STARTED"
    #TODO: should i wait until safemode finished?
    ssh -qt root@${_first_nn} "su hdfs -l -c 'hdfs zkfc -formatZK'" || return $?
    ssh -qt root@${_second_nn} "su hdfs -l -c \"kinit -kt /etc/security/keytabs/hdfs.headless.keytab hdfs-${_cluster,,}\"" &>/dev/null
    ssh -qt root@${_second_nn} "su hdfs -l -c 'hdfs namenode -bootstrapStandby'" || return $?

    # Starting new NN
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/host_components?" -X PUT --data '{"RequestInfo":{"context":"Start NameNode","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"},"query":"HostRoles/component_name=NAMENODE&HostRoles/host_name.in('${_second_nn}')&HostRoles/maintenance_state=OFF"},"Body":{"HostRoles":{"state":"STARTED"}}}'

    # Adding, assigining to hosts, installing and starting ZKFC
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/services?ServiceInfo/service_name=HDFS" --data '{"components":[{"ServiceComponentInfo":{"component_name":"ZKFC"}}]}' | grep -q '^HTTP/1.1 2' || return $?
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/hosts" --data '{"RequestInfo":{"query":"Hosts/host_name='${_second_nn}'|Hosts/host_name='${_first_nn}'"},"Body":{"host_components":[{"HostRoles":{"component_name":"ZKFC"}}]}}' | grep -q '^HTTP/1.1 2' || return $?
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/host_components?" -X PUT --data '{"RequestInfo":{"context":"Install ZKFailoverController","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"},"query":"HostRoles/component_name=ZKFC&HostRoles/host_name.in('${_second_nn}','${_first_nn}')&HostRoles/maintenance_state=OFF"},"Body":{"HostRoles":{"state":"INSTALLED"}}}'
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/host_components?" -X PUT --data '{"RequestInfo":{"context":"Start ZKFailoverController","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"},"query":"HostRoles/component_name=ZKFC&HostRoles/host_name.in('${_second_nn}','${_first_nn}')&HostRoles/maintenance_state=OFF"},"Body":{"HostRoles":{"state":"STARTED"}}}'

    # TODO: Ranger config update if Ranger is installed
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}" -X PUT --data '[{"Clusters":{"desired_config":[{"type":"ranger-env","tag":"version1522236566698","properties":{"admin_password":"SECRET:ranger-env:2:admin_password","admin_username":"admin","create_db_dbuser":"true","is_external_solrCloud_enabled":"false","is_external_solrCloud_kerberos":"false","is_nested_groupsync_enabled":"false","is_solrCloud_enabled":"false","ranger-atlas-plugin-enabled":"No","ranger-hbase-plugin-enabled":"No","ranger-hdfs-plugin-enabled":"No","ranger-hive-plugin-enabled":"No","ranger-kafka-plugin-enabled":"No","ranger-knox-plugin-enabled":"No","ranger-nifi-plugin-enabled":"No","ranger-storm-plugin-enabled":"No","ranger-yarn-plugin-enabled":"No","ranger_admin_log_dir":"/var/log/ranger/admin","ranger_admin_password":"SECRET:ranger-env:2:ranger_admin_password","ranger_admin_username":"amb_ranger_admin","ranger_group":"ranger","ranger_pid_dir":"/var/run/ranger","ranger_privelege_user_jdbc_url":"jdbc:postgresql://node1.houbu01.localdomain:5432/postgres","ranger_solr_collection_name":"ranger_audits","ranger_solr_config_set":"ranger_audits","ranger_solr_replication_factor":"1","ranger_solr_shards":"1","ranger_user":"ranger","ranger_usersync_log_dir":"/var/log/ranger/usersync","xasecure.audit.destination.hdfs":"false","xasecure.audit.destination.hdfs.dir":"hdfs://ubu01nnha/ranger/audit","xasecure.audit.destination.solr":"false","xml_configurations_supported":"true"},"service_config_version_note":"This configuration is created by Enable NameNode HA wizard"}]}},{"Clusters":{"desired_config":[{"type":"ranger-yarn-audit","tag":"version1522236566699","properties":{"ranger.plugin.yarn.ambari.cluster.name":"{{cluster_name}}","xasecure.audit.destination.hdfs":"false","xasecure.audit.destination.hdfs.batch.filespool.dir":"/var/log/hadoop/yarn/audit/hdfs/spool","xasecure.audit.destination.hdfs.dir":"hdfs://ubu01nnha/ranger/audit","xasecure.audit.destination.solr":"false","xasecure.audit.destination.solr.batch.filespool.dir":"/var/log/hadoop/yarn/audit/solr/spool","xasecure.audit.destination.solr.urls":"","xasecure.audit.destination.solr.zookeepers":"NONE","xasecure.audit.is.enabled":"true","xasecure.audit.provider.summary.enabled":"false"},"service_config_version_note":"This configuration is created by Enable NameNode HA wizard"}]}},{"Clusters":{"desired_config":[{"type":"ranger-kafka-audit","tag":"version1522236566699","properties":{"ranger.plugin.kafka.ambari.cluster.name":"{{cluster_name}}","xasecure.audit.destination.hdfs":"false","xasecure.audit.destination.hdfs.batch.filespool.dir":"/var/log/kafka/audit/hdfs/spool","xasecure.audit.destination.hdfs.dir":"hdfs://ubu01nnha/ranger/audit","xasecure.audit.destination.solr":"false","xasecure.audit.destination.solr.batch.filespool.dir":"/var/log/kafka/audit/solr/spool","xasecure.audit.destination.solr.urls":"","xasecure.audit.destination.solr.zookeepers":"NONE","xasecure.audit.is.enabled":"true","xasecure.audit.provider.summary.enabled":"true"},"service_config_version_note":"This configuration is created by Enable NameNode HA wizard"}]}},{"Clusters":{"desired_config":[{"type":"ranger-knox-audit","tag":"version1522236566699","properties":{"ranger.plugin.knox.ambari.cluster.name":"{{cluster_name}}","xasecure.audit.destination.hdfs":"false","xasecure.audit.destination.hdfs.batch.filespool.dir":"/var/log/knox/audit/hdfs/spool","xasecure.audit.destination.hdfs.dir":"hdfs://ubu01nnha/ranger/audit","xasecure.audit.destination.solr":"false","xasecure.audit.destination.solr.batch.filespool.dir":"/var/log/knox/audit/solr/spool","xasecure.audit.destination.solr.urls":"","xasecure.audit.destination.solr.zookeepers":"NONE","xasecure.audit.is.enabled":"true","xasecure.audit.provider.summary.enabled":"false"},"service_config_version_note":"This configuration is created by Enable NameNode HA wizard"}]}},{"Clusters":{"desired_config":[{"type":"ranger-atlas-audit","tag":"version1522236566699","properties":{"ranger.plugin.atlas.ambari.cluster.name":"{{cluster_name}}","xasecure.audit.destination.hdfs":"false","xasecure.audit.destination.hdfs.batch.filespool.dir":"/var/log/atlas/audit/hdfs/spool","xasecure.audit.destination.hdfs.dir":"hdfs://ubu01nnha/ranger/audit","xasecure.audit.destination.solr":"false","xasecure.audit.destination.solr.batch.filespool.dir":"/var/log/atlas/audit/solr/spool","xasecure.audit.destination.solr.urls":"","xasecure.audit.destination.solr.zookeepers":"NONE","xasecure.audit.is.enabled":"true","xasecure.audit.provider.summary.enabled":"false"},"service_config_version_note":"This configuration is created by Enable NameNode HA wizard"}]}},{"Clusters":{"desired_config":[{"type":"ranger-hive-audit","tag":"version1522236566699","properties":{"ranger.plugin.hive.ambari.cluster.name":"{{cluster_name}}","xasecure.audit.destination.hdfs":"false","xasecure.audit.destination.hdfs.batch.filespool.dir":"/var/log/hive/audit/hdfs/spool","xasecure.audit.destination.hdfs.dir":"hdfs://ubu01nnha/ranger/audit","xasecure.audit.destination.solr":"false","xasecure.audit.destination.solr.batch.filespool.dir":"/var/log/hive/audit/solr/spool","xasecure.audit.destination.solr.urls":"","xasecure.audit.destination.solr.zookeepers":"NONE","xasecure.audit.is.enabled":"true","xasecure.audit.provider.summary.enabled":"false"},"service_config_version_note":"This configuration is created by Enable NameNode HA wizard"}]}},{"Clusters":{"desired_config":[{"type":"ranger-kms-audit","tag":"version1522236566699","properties":{"ranger.plugin.kms.ambari.cluster.name":"{{cluster_name}}","xasecure.audit.destination.hdfs":"true","xasecure.audit.destination.hdfs.batch.filespool.dir":"/var/log/ranger/kms/audit/hdfs/spool","xasecure.audit.destination.hdfs.dir":"hdfs://ubu01nnha/ranger/audit","xasecure.audit.destination.solr":"true","xasecure.audit.destination.solr.batch.filespool.dir":"/var/log/ranger/kms/audit/solr/spool","xasecure.audit.destination.solr.urls":"","xasecure.audit.destination.solr.zookeepers":"NONE","xasecure.audit.is.enabled":"true","xasecure.audit.provider.summary.enabled":"false"},"service_config_version_note":"This configuration is created by Enable NameNode HA wizard"}]}}]'
    #curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}" -X PUT --data '{"Clusters":{"desired_config":[{"type":"hbase-site","tag":"version1522236568381","properties":{"dfs.domain.socket.path":"/var/lib/hadoop-hdfs/dn_socket","hbase.bulkload.staging.dir":"/apps/hbase/staging","hbase.client.keyvalue.maxsize":"1048576","hbase.client.retries.number":"35","hbase.client.scanner.caching":"100","hbase.cluster.distributed":"true","hbase.coprocessor.master.classes":"","hbase.coprocessor.region.classes":"org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint","hbase.custom-extensions.root":"/hdp/ext/{{major_stack_version}}/hbase","hbase.defaults.for.version.skip":"true","hbase.hregion.majorcompaction":"604800000","hbase.hregion.majorcompaction.jitter":"0.50","hbase.hregion.max.filesize":"10737418240","hbase.hregion.memstore.block.multiplier":"4","hbase.hregion.memstore.chunkpool.maxsize":"1.0","hbase.hregion.memstore.flush.size":"134217728","hbase.hregion.memstore.mslab.enabled":"true","hbase.hstore.blockingStoreFiles":"10","hbase.hstore.compaction.max":"10","hbase.hstore.compactionThreshold":"3","hbase.local.dir":"${hbase.tmp.dir}/local","hbase.master.info.bindAddress":"0.0.0.0","hbase.master.info.port":"16010","hbase.master.namespace.init.timeout":"2400000","hbase.master.port":"16000","hbase.master.ui.readonly":"false","hbase.master.wait.on.regionservers.timeout":"30000","hbase.regionserver.executor.openregion.threads":"20","hbase.regionserver.global.memstore.size":"0.4","hbase.regionserver.handler.count":"30","hbase.regionserver.info.port":"16030","hbase.regionserver.port":"16020","hbase.regionserver.wal.codec":"org.apache.hadoop.hbase.regionserver.wal.WALCellCodec","hbase.rootdir":"/apps/hbase/data","hbase.rpc.protection":"authentication","hbase.rpc.timeout":"90000","hbase.security.authentication":"simple","hbase.security.authorization":"false","hbase.superuser":"hbase","hbase.tmp.dir":"/tmp/hbase-${user.name}","hbase.zookeeper.property.clientPort":"2181","hbase.zookeeper.quorum":"node2.houbu01.localdomain","hbase.zookeeper.useMulti":"true","hfile.block.cache.size":"0.40","phoenix.query.timeoutMs":"60000","zookeeper.recovery.retry":"6","zookeeper.session.timeout":"90000","zookeeper.znode.parent":"/hbase-unsecure"},"service_config_version_note":"This configuration is created by Enable NameNode HA wizard"},{"type":"ranger-hbase-audit","tag":"version1522236568381","properties":{"ranger.plugin.hbase.ambari.cluster.name":"{{cluster_name}}","xasecure.audit.destination.hdfs":"false","xasecure.audit.destination.hdfs.batch.filespool.dir":"/var/log/hbase/audit/hdfs/spool","xasecure.audit.destination.hdfs.dir":"hdfs://ubu01nnha/ranger/audit","xasecure.audit.destination.solr":"false","xasecure.audit.destination.solr.batch.filespool.dir":"/var/log/hbase/audit/solr/spool","xasecure.audit.destination.solr.urls":"","xasecure.audit.destination.solr.zookeepers":"NONE","xasecure.audit.is.enabled":"true","xasecure.audit.provider.summary.enabled":"true"},"service_config_version_note":"This configuration is created by Enable NameNode HA wizard"}]}}'

    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/hosts/'${_second_nn}'/host_components/SECONDARY_NAMENODE" -X DELETE

    # STOP ALL, then START ALL
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/services?ServiceInfo/service_name.in(HDFS)" -X PUT --data '{"RequestInfo":{"context":"Stop required services","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"}},"Body":{"ServiceInfo":{"state":"INSTALLED"}}}'
    # Wait until stop. TODO: Assuming ZOOKEEPER will be the last
    _ambari_waist_comp_state "${_ambari_cluster_api_url}" "ZOOKEEPER" "ZOOKEEPER_SERVER" "INSTALLED"
    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/services" -X PUT --data '{"RequestInfo":{"context":"_PARSE_.START.ALL_SERVICES","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"}},"Body":{"ServiceInfo":{"state":"STARTED"}}}'
}

function setup_rm_ha() {
    local _ambari_cluster_api_url="${1}"    # eg: http://ho-ubu01:8080/api/v1/clusters/houbu01_1
    local _first_rm="${2-$_FIRST_RM}"
    local _second_rm="${3-$_NEW_RM}"        # TODO: currently new NN must be Secondary NameNode
    local _cluster="`basename "${_ambari_cluster_api_url%/}"`"

    # TODO: not done yet
    return

    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/services?ServiceInfo/service_name.in(YARN,MAPREDUCE2,TEZ,HIVE,HBASE,PIG,ZOOKEEPER,AMBARI_INFRA,KAFKA,KNOX,RANGER,RANGER_KMS,SLIDER)" -X PUT --data '{"RequestInfo":{"context":"Stop required services","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"}},"Body":{"ServiceInfo":{"state":"INSTALLED"}}}'

    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/hosts" --data '{"RequestInfo":{"query":"Hosts/host_name=node3.houbu01.localdomain"},"Body":{"host_components":[{"HostRoles":{"component_name":"RESOURCEMANAGER"}}]}}'

    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/host_components?" -X PUT --data '{"RequestInfo":{"context":"Install ResourceManager","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"},"query":"HostRoles/component_name=RESOURCEMANAGER&HostRoles/host_name.in(node3.houbu01.localdomain)&HostRoles/maintenance_state=OFF"},"Body":{"HostRoles":{"state":"INSTALLED"}}}'

    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}" -X PUT --data '{"Clusters":{"desired_config":[{"type":"yarn-site","tag":"version1522238825006","properties":{"hadoop.registry.rm.enabled":"true","hadoop.registry.zk.quorum":"node2.houbu01.localdomain:2181","manage.include.files":"false","yarn.acl.enable":"false","yarn.admin.acl":"yarn","yarn.application.classpath":"{{hadoop_home}}/conf,{{hadoop_home}}/*,{{hadoop_home}}/lib/*,/usr/hdp/current/hadoop-hdfs-client/*,/usr/hdp/current/hadoop-hdfs-client/lib/*,/usr/hdp/current/hadoop-yarn-client/*,/usr/hdp/current/hadoop-yarn-client/lib/*,/usr/hdp/current/ext/hadoop/*","yarn.client.failover-proxy-provider":"org.apache.hadoop.yarn.client.RequestHedgingRMFailoverProxyProvider","yarn.client.nodemanager-connect.max-wait-ms":"60000","yarn.client.nodemanager-connect.retry-interval-ms":"10000","yarn.http.policy":"HTTP_ONLY","yarn.log-aggregation-enable":"true","yarn.log-aggregation.file-controller.IndexedFormat.class":"org.apache.hadoop.yarn.logaggregation.filecontroller.ifile.LogAggregationIndexedFileController","yarn.log-aggregation.file-controller.TFile.class":"org.apache.hadoop.yarn.logaggregation.filecontroller.tfile.LogAggregationTFileController","yarn.log-aggregation.file-formats":"IndexedFormat,TFile","yarn.log-aggregation.retain-seconds":"2592000","yarn.log.server.url":"http://node2.houbu01.localdomain:19888/jobhistory/logs","yarn.log.server.web-service.url":"http://node2.houbu01.localdomain:8188/ws/v1/applicationhistory","yarn.node-labels.enabled":"false","yarn.node-labels.fs-store.retry-policy-spec":"2000, 500","yarn.node-labels.fs-store.root-dir":"/system/yarn/node-labels","yarn.nodemanager.address":"0.0.0.0:45454","yarn.nodemanager.admin-env":"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX","yarn.nodemanager.aux-services":"mapreduce_shuffle,spark_shuffle,spark2_shuffle","yarn.nodemanager.aux-services.mapreduce_shuffle.class":"org.apache.hadoop.mapred.ShuffleHandler","yarn.nodemanager.aux-services.spark2_shuffle.class":"org.apache.spark.network.yarn.YarnShuffleService","yarn.nodemanager.aux-services.spark2_shuffle.classpath":"{{stack_root}}/${hdp.version}/spark2/aux/*","yarn.nodemanager.aux-services.spark_shuffle.class":"org.apache.spark.network.yarn.YarnShuffleService","yarn.nodemanager.aux-services.spark_shuffle.classpath":"{{stack_root}}/${hdp.version}/spark/aux/*","yarn.nodemanager.bind-host":"0.0.0.0","yarn.nodemanager.container-executor.class":"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor","yarn.nodemanager.container-metrics.unregister-delay-ms":"60000","yarn.nodemanager.container-monitor.interval-ms":"3000","yarn.nodemanager.delete.debug-delay-sec":"1800","yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage":"90","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb":"1000","yarn.nodemanager.disk-health-checker.min-healthy-disks":"0.25","yarn.nodemanager.health-checker.interval-ms":"135000","yarn.nodemanager.health-checker.script.timeout-ms":"60000","yarn.nodemanager.kill-escape.launch-command-line":"slider-agent,LLAP","yarn.nodemanager.kill-escape.user":"hive","yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage":"false","yarn.nodemanager.linux-container-executor.group":"hadoop","yarn.nodemanager.local-dirs":"/hadoop/yarn/local","yarn.nodemanager.log-aggregation.compression-type":"gz","yarn.nodemanager.log-aggregation.debug-enabled":"false","yarn.nodemanager.log-aggregation.num-log-files-per-app":"336","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds":"3600","yarn.nodemanager.log-dirs":"/hadoop/yarn/log","yarn.nodemanager.log.retain-seconds":"604800","yarn.nodemanager.recovery.dir":"{{yarn_log_dir_prefix}}/nodemanager/recovery-state","yarn.nodemanager.recovery.enabled":"true","yarn.nodemanager.remote-app-log-dir":"/app-logs","yarn.nodemanager.remote-app-log-dir-suffix":"logs","yarn.nodemanager.resource.cpu-vcores":"6","yarn.nodemanager.resource.memory-mb":"9216","yarn.nodemanager.resource.percentage-physical-cpu-limit":"80","yarn.nodemanager.vmem-check-enabled":"false","yarn.nodemanager.vmem-pmem-ratio":"2.1","yarn.resourcemanager.address":"node2.houbu01.localdomain:8050","yarn.resourcemanager.admin.address":"node2.houbu01.localdomain:8141","yarn.resourcemanager.am.max-attempts":"2","yarn.resourcemanager.bind-host":"0.0.0.0","yarn.resourcemanager.connect.max-wait.ms":"-1","yarn.resourcemanager.connect.retry-interval.ms":"15000","yarn.resourcemanager.fs.state-store.retry-policy-spec":"2000, 500","yarn.resourcemanager.fs.state-store.uri":" ","yarn.resourcemanager.ha.enabled":true,"yarn.resourcemanager.hostname":"node2.houbu01.localdomain","yarn.resourcemanager.monitor.capacity.preemption.natural_termination_factor":"1","yarn.resourcemanager.monitor.capacity.preemption.total_preemption_per_round":"0.25","yarn.resourcemanager.nodes.exclude-path":"/etc/hadoop/conf/yarn.exclude","yarn.resourcemanager.recovery.enabled":true,"yarn.resourcemanager.resource-tracker.address":"node2.houbu01.localdomain:8025","yarn.resourcemanager.scheduler.address":"node2.houbu01.localdomain:8030","yarn.resourcemanager.scheduler.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler","yarn.resourcemanager.scheduler.monitor.enable":"false","yarn.resourcemanager.state-store.max-completed-applications":"${yarn.resourcemanager.max-completed-applications}","yarn.resourcemanager.store.class":"org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore","yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size":"10","yarn.resourcemanager.system-metrics-publisher.enabled":"true","yarn.resourcemanager.webapp.address":"node2.houbu01.localdomain:8088","yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled":"false","yarn.resourcemanager.webapp.https.address":"node2.houbu01.localdomain:8090","yarn.resourcemanager.work-preserving-recovery.enabled":"true","yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms":"10000","yarn.resourcemanager.zk-acl":"world:anyone:rwcda","yarn.resourcemanager.zk-address":"node2.houbu01.localdomain:2181","yarn.resourcemanager.zk-num-retries":"1000","yarn.resourcemanager.zk-retry-interval-ms":"1000","yarn.resourcemanager.zk-state-store.parent-path":"/rmstore","yarn.resourcemanager.zk-timeout-ms":"10000","yarn.scheduler.capacity.ordering-policy.priority-utilization.underutilized-preemption.enabled":"false","yarn.scheduler.maximum-allocation-mb":"9216","yarn.scheduler.maximum-allocation-vcores":"6","yarn.scheduler.minimum-allocation-mb":"250","yarn.scheduler.minimum-allocation-vcores":"1","yarn.timeline-service.address":"node2.houbu01.localdomain:10200","yarn.timeline-service.bind-host":"0.0.0.0","yarn.timeline-service.client.fd-flush-interval-secs":"5","yarn.timeline-service.client.max-retries":"30","yarn.timeline-service.client.retry-interval-ms":"1000","yarn.timeline-service.enabled":"true","yarn.timeline-service.entity-group-fs-store.active-dir":"/ats/active/","yarn.timeline-service.entity-group-fs-store.app-cache-size":"10","yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds":"3600","yarn.timeline-service.entity-group-fs-store.done-dir":"/ats/done/","yarn.timeline-service.entity-group-fs-store.group-id-plugin-classes":"org.apache.tez.dag.history.logging.ats.TimelineCachePluginImpl","yarn.timeline-service.entity-group-fs-store.group-id-plugin-classpath":"","yarn.timeline-service.entity-group-fs-store.retain-seconds":"604800","yarn.timeline-service.entity-group-fs-store.scan-interval-seconds":"15","yarn.timeline-service.entity-group-fs-store.summary-store":"org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore","yarn.timeline-service.generic-application-history.store-class":"org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore","yarn.timeline-service.http-authentication.proxyuser.root.groups":"*","yarn.timeline-service.http-authentication.proxyuser.root.hosts":"node1.houbu01.localdomain","yarn.timeline-service.http-authentication.simple.anonymous.allowed":"true","yarn.timeline-service.http-authentication.type":"simple","yarn.timeline-service.leveldb-state-store.path":"/hadoop/yarn/timeline","yarn.timeline-service.leveldb-timeline-store.path":"/hadoop/yarn/timeline","yarn.timeline-service.leveldb-timeline-store.read-cache-size":"104857600","yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size":"10000","yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size":"10000","yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms":"300000","yarn.timeline-service.recovery.enabled":"true","yarn.timeline-service.state-store-class":"org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore","yarn.timeline-service.store-class":"org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore","yarn.timeline-service.ttl-enable":"true","yarn.timeline-service.ttl-ms":"2678400000","yarn.timeline-service.version":"1.5","yarn.timeline-service.webapp.address":"node2.houbu01.localdomain:8188","yarn.timeline-service.webapp.https.address":"node2.houbu01.localdomain:8190","yarn.resourcemanager.ha.rm-ids":"rm1,rm2","yarn.resourcemanager.hostname.rm1":"node2.houbu01.localdomain","yarn.resourcemanager.webapp.address.rm1":"node2.houbu01.localdomain:8088","yarn.resourcemanager.webapp.address.rm2":"node3.houbu01.localdomain:8088","yarn.resourcemanager.webapp.https.address.rm1":"node2.houbu01.localdomain:8090","yarn.resourcemanager.webapp.https.address.rm2":"node3.houbu01.localdomain:8090","yarn.resourcemanager.hostname.rm2":"node3.houbu01.localdomain","yarn.resourcemanager.cluster-id":"yarn-cluster","yarn.resourcemanager.ha.automatic-failover.zk-base-path":"/yarn-leader-election"},"service_config_version_note":"This configuration is created by Enable ResourceManager HA wizard"}]}}'

    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}" -X PUT --data '{"Clusters":{"desired_config":[{"type":"core-site","tag":"version1522238826780","properties":{"fs.defaultFS":"hdfs://ubu01nnha","fs.trash.interval":"360","ha.failover-controller.active-standby-elector.zk.op.retries":"120","ha.zookeeper.quorum":"node2.houbu01.localdomain:2181","hadoop.custom-extensions.root":"/hdp/ext/{{major_stack_version}}/hadoop","hadoop.http.authentication.simple.anonymous.allowed":"true","hadoop.proxyuser.hbase.groups":"*","hadoop.proxyuser.hbase.hosts":"*","hadoop.proxyuser.hcat.groups":"*","hadoop.proxyuser.hcat.hosts":"node2.houbu01.localdomain","hadoop.proxyuser.hdfs.groups":"*","hadoop.proxyuser.hdfs.hosts":"*","hadoop.proxyuser.hive.groups":"*","hadoop.proxyuser.hive.hosts":"node2.houbu01.localdomain","hadoop.proxyuser.root.groups":"*","hadoop.proxyuser.root.hosts":"node1.houbu01.localdomain","hadoop.security.auth_to_local":"DEFAULT","hadoop.security.authentication":"simple","hadoop.security.authorization":"false","hadoop.security.key.provider.path":"kms://http@node3.houbu01.localdomain:9292/kms","io.compression.codecs":"org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec","io.file.buffer.size":"131072","io.serializations":"org.apache.hadoop.io.serializer.WritableSerialization","ipc.client.connect.max.retries":"50","ipc.client.connection.maxidletime":"30000","ipc.client.idlethreshold":"8000","ipc.server.tcpnodelay":"true","mapreduce.jobtracker.webinterface.trusted":"false","net.topology.script.file.name":"/etc/hadoop/conf/topology_script.py","hadoop.proxyuser.yarn.hosts":"node2.houbu01.localdomain,node3.houbu01.localdomain"},"service_config_version_note":"This configuration is created by Enable ResourceManager HA wizard","properties_attributes":{"final":{"fs.defaultFS":"true"}}}]}}'

    curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_ambari_cluster_api_url%/}/services?params/run_smoke_test=true" -X PUT --data '{"RequestInfo":{"context":"Start all services","operation_level":{"level":"CLUSTER","cluster_name":"'${_cluster}'"}},"Body":{"ServiceInfo":{"state":"STARTED"}}}'
}

function _ambari_waist_comp_state() {
    local _ambari_cluster_api_url="${1}"    # eg: http://ho-ubu01:8080/api/v1/clusters/houbu01_1
    local _service="${2}"
    local _comp="${3}"
    local _state="${4}"
    local _loop="${5-10}"
    local _interval="${6-10}"
    [ -z "${_state}" ] && return 1

    local _url="${_ambari_cluster_api_url%/}/services/${_service}?fields=ServiceInfo/state"
    [ -n "${_comp}" ] && _url="${_ambari_cluster_api_url%/}/services/${_service}/components/${_comp}?fields=ServiceComponentInfo/state"

    for _i in `seq 1 ${_loop}`; do
        curl -siku "${g_AMBARI_USER}":"${g_AMBARI_PASS}" -H "X-Requested-By:ambari" "${_url}" | grep '"state" : "'${_state}'"' && break;
        sleep 10
    done
}



### main ########################
# TODO: at this moment, only when this script is directly used, do update check.
if [ "$0" = "$BASH_SOURCE" ]; then
    _FIRST_NN="$1"
    _NEW_NN="$2"
    _FIRST_RM="$1"
    _NEW_RM="$2"

    set -x
    setup_nn_ha
fi