statefulset:
  # This is not supported
  enabled: false
# By default deploymentStrategy is set to rollingUpdate with maxSurge of 25% and maxUnavailable of 25% . you can change type to `Recreate` or can uncomment `rollingUpdate` specification and adjust them to your usage.
deploymentStrategy: Recreate
image:
  # Sonatype Official Public Image
  repository: sonatype/nexus3
  tag: 3.37.3
  pullPolicy: IfNotPresent

nexus:
  docker:
    enabled: false
    registries: []
    #  - host: chart.local
    #    port: 5000
    #    secretName: registrySecret
  env:
    #- name: install4jAddVmParams
    - name: INSTALL4J_ADD_VM_PARAMS
      # NOTE: Enabling nexus.properties.override makes /nexus-data/etc owned by root and not writable, but -Dapplication-port-ssl=8443 does not work
      value: "-Xms1200M -Xmx1200M -XX:MaxDirectMemorySize=2G -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    - name: NEXUS_SECURITY_RANDOMPASSWORD
      value: "true"
  ##### Hack for enabling HTTPS: start #####
  properties:
    override: true
    data:
      nexus.scripts.allowCreation: true
      application-port-ssl: 8443
      ssl.etc: /nexus-data/etc/ssl
      nexus-args: ${jetty.etc}/jetty.xml,${jetty.etc}/jetty-http.xml,/nexus-data/etc/ssl/jetty-https.xml,${jetty.etc}/jetty-requestlog.xml
  ##### Hack for enabling HTTPS: end #####
  # nodeSelector:
  #   cloud.google.com/gke-nodepool: default-pool
  resources: {}
    # requests:
    ## Based on https://support.sonatype.com/hc/en-us/articles/115006448847#mem
    ## and https://twitter.com/analytically/status/894592422382063616:
    ##   Xms == Xmx
    ##   Xmx <= 4G
    ##   MaxDirectMemory >= 2G
    ##   Xmx + MaxDirectMemory <= RAM * 2/3 (hence the request for 4800Mi)
    ##   MaxRAMFraction=1 is not being set as it would allow the heap
    ##     to use all the available memory.
    # cpu: 250m
  # memory: 4800Mi
  # The ports should only be changed if the nexus image uses a different port
  nexusPort: 8443

  securityContext:
    fsGroup: 2000
  podAnnotations: {}
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 30
    failureThreshold: 6
    timeoutSeconds: 10
    path: /
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 30
    failureThreshold: 6
    timeoutSeconds: 10
    path: /
  # hostAliases allows the modification of the hosts file inside a container
  hostAliases: []
  # - ip: "192.168.1.10"
  #   hostnames:
  #   - "example.com"
  #   - "www.example.com"


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

deployment:
  # # Add annotations in deployment to enhance deployment configurations
  annotations: {}
  # # Add init containers. e.g. to be used to give specific permissions for nexus-data.
  # # Add your own init container or uncomment and modify the given example.
  ##### Hack for enabling HTTPS: start #####
  initContainers:
    - name: fmp-volume-permission
      image: busybox
      imagePullPolicy: IfNotPresent
      command: ["/bin/sh", "-c", "[ -d /nexus-data/etc/ssl ] || mkdir -v -p /nexus-data/etc/ssl; chown -v -R 200:200 /nexus-data/etc;"]
      volumeMounts:
        - name: nexus-repository-manager-data
          mountPath: /nexus-data
  postStart:
    # NOTE: preStart would be ideal, but does not work. TODO: update below for either 'sed'-ing '>password<' or useing own jetty-https.xml
    command: '["/bin/sh", "-c", "[ -f /nexus-data/etc/ssl/jetty-https.xml ] || cp -v -p /opt/sonatype/nexus/etc/jetty/jetty-https.xml /nexus-data/etc/ssl/; [ -f /nexus-data/etc/ssl/keystore.jks ] || curl -o /nexus-data/etc/ssl/keystore.jks -L https://github.com/hajimeo/samples/raw/master/misc/standalone.localdomain.jks;"]'
  ##### Hack for enabling HTTPS: end #####
  preStart:
    command:    # '["/bin/rm", "-f", "/path/to/lockfile"]'
  terminationGracePeriodSeconds: 120
  additionalContainers:
  additionalVolumes:
  additionalVolumeMounts:


ingress:
  enabled: false
  annotations: {kubernetes.io/ingress.class: nginx}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hostPath: /
  hostRepo: repo.demo
  tls: []
    # - secretName: nexus-local-tls
    #   hosts:
    #     - nexus.local
    #     - nexus-docker.local
  #     - nexus-docker-hosted.local


service:
  name: nexus3
  enabled: true
  labels: {}
  annotations: {}
  type: ClusterIP


route:
  enabled: false
  name: docker
  portName: docker
  labels:
  annotations:
  # path: /docker

nexusProxyRoute:
  enabled: false
  labels:
  annotations:
  # path: /nexus

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  ## If defined, storageClass: <storageClass>
  ## If set to "-", storageClass: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClass spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # existingClaim:
  # annotations:
  #  "helm.sh/resource-policy": keep
  # storageClass: "-"
  storageSize: 8Gi
  # If PersistentDisk already exists you can create a PV for it by including the 2 following keypairs.
  # pdName: nexus-data-disk
  # fsType: ext4

tolerations: []

# # Enable configmap and add data in configmap
config:
  enabled: false
  mountPath: /sonatype-nexus-conf
  data: []

# # To use an additional secret, set enable to true and add data
secret:
  enabled: false
  mountPath: /etc/secret-volume
  readOnly: true
  data: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

psp:
  create: false

