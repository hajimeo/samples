# NOTE:
#   This script uses the node's hostPath for sharing blobs, instead of the recommended NFS.
#
# PREPARATION:
#  - On K8s node: mkdir -m 777 ${_SONATYPE_WORK}, which will be used for sonatypeWork directory.
#  - Set up the license file:
#     kubectl -n "sonatype" create secret generic sonatype-license --from-file sonatype-license.lic=/path/to/licenseFile
#  - On PostgreSQL server: source ./utils.sh && _postgresql_create_dbuser "${_ID}"
#  - Configure Ingress
#
# COMMAND EXAMPLE:
#   export _ID="nxiqpg" _TAG="1.135.0" _RUNAS_USR=1000 _DNS="192.168.52.31"
#   export _SONATYPE_WORK="/var/tmp/share/sonatype/${_ID}" _DB_USER="${_ID}" _DB_PWD="${_ID}" _DB_HOST="192.168.52.31" _DB_NAME="${_ID}"
#   eval "echo \"$(cat ./k8s-iq-pg.yaml | grep -v '^\s*#')\"" > /tmp/${_ID}.yaml
#   #kubectl -n "sonatype" delete -f /tmp/${_ID}.yaml
#   kubectl -n "sonatype" apply -f /tmp/${_ID}.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nxiq-pg-conf
  labels:
    app: nxiq-pg
data:
  # NOTE: Can't use double-quotes. The baseUrl is not set.
  config.yml: |
    sonatypeWork: /sonatype-work
    server:
      applicationConnectors:
        - type: http
          port: 8070
      adminConnectors:
        - type: http
          port: 8071
      requestLog:
        appenders:
          - type: file
            currentLogFilename: /sonatype-work/log/request.log
            archivedLogFilenamePattern: /sonatype-work/log/request-%d.log.gz
            archivedFileCount: 7
    logging:
      level: DEBUG
      loggers:
        com.sonatype.insight.scan: INFO
        eu.medsea.mimeutil.MimeUtil2: INFO
        org.apache.http: INFO
        org.apache.http.wire: ERROR
        org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader: WARN
        org.eclipse.jetty: INFO
        org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter: INFO
        com.sonatype.insight.audit:
          appenders:
            - type: file
              currentLogFilename: /sonatype-work/log/audit.log
              archivedLogFilenamePattern: /sonatype-work/log/audit-%d.log.gz
              archivedFileCount: 14
        com.sonatype.insight.policy.violation:
          appenders:
            - type: file
              currentLogFilename: /sonatype-work/log/policy-violation.log
              archivedLogFilenamePattern: /sonatype-work/log/policy-violation-%d.log.gz
              archivedFileCount: 7
      appenders:
        - type: console
          threshold: INFO
          logFormat: \"%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n\"
        - type: file
          threshold: ALL
          currentLogFilename: /sonatype-work/log/clm-server.log
          archivedLogFilenamePattern: /sonatype-work/log/clm-server-%d.log.gz
          logFormat: \"%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n\"
          archivedFileCount: 7
    createSampleData: true
    enableDefaultPasswordWarning: false
    licenseFile: /etc/sonatype/sonatype-license.lic
    database:
      type: postgresql
      hostname: ${_DB_HOST}
      name: ${_DB_NAME}
      username: ${_DB_USER}
      password: ${_DB_PWD}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nxiq-pg-deployment
  labels:
    app: nxiq-pg
spec:
  minReadySeconds: 180
  replicas: 1
  selector:
    matchLabels:
      app: nxiq-pg
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nxiq-pg
    spec:
      terminationGracePeriodSeconds: 120
      dnsPolicy: Default
      # NOTE: Without initContainers, it fails to start on Docker-Desktop
      initContainers:
        - name: my-customizaion
          env:
            - name: NAMESERVER
              value: ${_DNS:-127.0.0.1}
          image: busybox:1.33.1
          # NOTE: 'echo nameserver ...' line is my personal hack as i do not want to use coreDNS
          #       Also, it seems the exit code needs to be 0
          command: ['sh', '-c', '[ -n "\$NAMESERVER" ] && echo nameserver \$NAMESERVER > /etc/resolv.conf; [ ! -d /sonatype-work/log ] && mkdir -v /sonatype-work/log && chown -v -R ${_RUNAS_USR:-1000}: /sonatype-work; echo "completed"']
          volumeMounts:
            - name: nxiq-pg-work-volume
              mountPath: /sonatype-work
      containers:
        - name: nxiq-pg-pod
          securityContext:
            runAsUser: ${_RUNAS_USR:-1000}
          image: "sonatype/nexus-iq-server:${_TAG:-latest}"
          imagePullPolicy: IfNotPresent
          env:
            # Somehow -Ddw.licenseFile is not working (but anyway, only once)
            # If no configMap: -Ddw.database.type=postgresql -Ddw.database.hostname=${_DB_HOST} -Ddw.database.name=${_DB_NAME} -Ddw.database.username=${_DB_USER}
            - name: JAVA_OPTS
              value: '-XX:ActiveProcessorCount=2 -Xms2g -Xmx2g \
              -XX:+UnlockDiagnosticVMOptions -XX:+LogVMOutput -XX:LogFile=/sonatype-work/log/jvm.log'
          ports:
            - containerPort: 8070
            - containerPort: 8071
          livenessProbe:
            httpGet:
              path: /ping
              port: 8070
            initialDelaySeconds: 30
            periodSeconds: 120
            successThreshold: 1
            failureThreshold: 6
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /ping
              port: 8070
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 60
            timeoutSeconds: 10
          volumeMounts:
            - name: sonatype-license-volume
              mountPath: /etc/sonatype
            - name: nxiq-pg-conf-volume
              mountPath: /etc/nexus-iq-server
            - name: nxiq-pg-work-volume
              mountPath: /sonatype-work
      volumes:
        #kubectl -n sonatype create secret generic sonatype-license --from-file /path/to/licenseFile
        - name: sonatype-license-volume
          secret:
            secretName: sonatype-license
        - name: nxiq-pg-conf-volume
          configMap:
            name: nxiq-pg-conf
            items:
              - key: config.yml
                path: config.yml
        - name: nxiq-pg-work-volume
          hostPath:
            path: ${_SONATYPE_WORK%/}
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: nxiq-pg-service
  labels:
    app: nxiq-pg
spec:
  type: NodePort
  selector:
    app: nxiq-pg
  ports:
    - name: nxiq-web-ui
      protocol: TCP
      port: 8070
      targetPort: 8070
