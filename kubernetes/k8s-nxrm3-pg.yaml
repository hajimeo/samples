# NOTE:
#   This script uses the node's hostPath for sharing blobs, instead of the recommended NFS.
#
# PREPARATION:
#  - On K8s node: mkdir -m 777 ${_SHARE_DIR%/}/${_ID}, which will be used for blob stores.
#  - Set up the license file from one of the following ways:
#     a) Copy the 'sonatype-license.lic' into ${_SHARE_DIR%/} and specify '-Dnexus.licenseFile='
#     b) kubectl -n "sonatype" create configmap sonatype-license --from-file sonatype-license.lic=/path/to/licenseFile
#     c) (RECOMMENDED) kubectl -n "sonatype" create secret generic sonatype-license --from-file sonatype-license.lic=/path/to/licenseFile
#  - On PostgreSQL server: source ./utils.sh && _postgresql_create_dbuser "${_ID}"
#  - Configure Ingress
#
# COMMAND EXAMPLE:
#   kubectl create namespace "sonatype"
#   cd ~/IdeaProjects/samples/kubernetes
#   # Below _DNS is my hack and usually don't need to use this. _DB_USER can't contain '-' character.
#   export _ID="nxrm3pg" _DNS="192.168.52.31" _SHARE_DIR="/var/tmp/share"
#   export _TAG="3.37.2" _DB_USER="${_ID}" _DB_PWD="${_ID}" _JDBC_URL="jdbc:postgresql://192.168.52.31:5432/${_ID}"
#   # Replace single quotes with double quotes and remove \\ from below:
#   eval 'echo \"\\$\\(cat ./k8s-nxrm3-pg.yaml\\)\"' > /tmp/${_ID}.yaml
#   # When recreating, remove /nexus-data/etc/fabric/nexus-store.properties if JDBC setting was changed.
#   #kubectl -n "sonatype" delete -f /tmp/${_ID}.yaml
#   kubectl -n "sonatype" apply -f /tmp/${_ID}.yaml
#
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nxrm3-pg-data-pvc
  labels:
    app: nxrm3-pg
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
  #storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nxrm3-pg-deployment
  labels:
    app: nxrm3-pg
spec:
  minReadySeconds: 180
  replicas: 1
  selector:
    matchLabels:
      app: nxrm3-pg
  template:
    metadata:
      labels:
        app: nxrm3-pg
    spec:
      terminationGracePeriodSeconds: 120
      dnsPolicy: Default
      # NOTE: Without initContainers, it fails to start on Docker-Desktop
      initContainers:
        - name: my-customizaion
          env:
            - name: BLOBS_PATH
              value: ${_SHARE_DIR%/}/sonatype/${_ID}/blobs
            - name: NAMESERVER
              value: ${_DNS:-127.0.0.1}
          image: busybox:1.33.1
          #[ -d /nexus-data/blobs ] && [ ! -L /nexus-data/blobs ] && mv -v /nexus-data/blobs /nexus-data/blobs_orig;
          # Below echo nameserver ... is my personal hack as i do not want to use coreDNS
          command: ['sh', '-c', '[ -n "\$NAMESERVER" ] && echo nameserver \$NAMESERVER > /etc/resolv.conf; [ ! -d "\$BLOBS_PATH" ] && mkdir -p -m 777 -v \$BLOBS_PATH; if [ ! -L /nexus-data/blobs ]; then ln -v -s \$BLOBS_PATH /nexus-data/blobs && chown -v 200:200 /nexus-data && chown -v -R 200:200 /nexus-data/blobs/; fi']
          volumeMounts:
            - name: nexus-data-volume
              mountPath: /nexus-data
            - name: nexus-share-volume
              mountPath: ${_SHARE_DIR%/}
      containers:
        - name: nxrm3-pg-pod
          securityContext:
            runAsUser: 200
          image: sonatype/nexus3:${_TAG:-latest}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 120
            successThreshold: 1
            failureThreshold: 6
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 60
            timeoutSeconds: 10
          env:
            - name: NEXUS_SECURITY_RANDOMPASSWORD
              value: 'false'
            - name: INSTALL4J_ADD_VM_PARAMS
              # No schema specified, so will be public.
              value: '-Xms2g -Xmx2g -XX:MaxDirectMemorySize=2g \
                -Djava.util.prefs.userRoot=/nexus-data/javaprefs \
                -Dnexus.licenseFile=/etc/sonatype/sonatype-license.lic \
                -Dnexus.datastore.enabled=true \
                -Dnexus.datastore.nexus.name=nexus \
                -Dnexus.datastore.nexus.type=jdbc \
                -Dnexus.datastore.nexus.jdbcUrl=${_JDBC_URL} \
                -Dnexus.datastore.nexus.username=${_DB_USER} \
                -Dnexus.datastore.nexus.password=${_DB_PWD} \
                -Dnexus.datastore.nexus.maximumPoolSize=10 \
                -Dnexus.datastore.nexus.advanced=maxLifetime=600000'
          volumeMounts:
            - name: sonatype-license-volume
              mountPath: /etc/sonatype
              readOnly: true
            - name: nexus-data-volume
              mountPath: /nexus-data
            - name: nexus-share-volume
              mountPath: ${_SHARE_DIR%/}
      volumes:
        #kubectl -n sonatype create secret generic sonatype-license --from-file /path/to/licenseFile
        - name: sonatype-license-volume
          secret:
            secretName: sonatype-license
        - name: nexus-data-volume
          persistentVolumeClaim:
            claimName: nxrm3-pg-data-pvc
        - name: nexus-share-volume
          hostPath:
            path: ${_SHARE_DIR%/}
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: nxrm3-pg-service
  labels:
    app: nxrm3-pg
spec:
  type: NodePort
  selector:
    app: nxrm3-pg
  ports:
    - name: nexus-web-ui
      protocol: TCP
      port: 8081
      targetPort: 8081
    - name: nexus-docker-http
      protocol: TCP
      port: 4999
      targetPort: 4999
    - name: nexus-docker-https
      protocol: TCP
      port: 5000
      targetPort: 5000
